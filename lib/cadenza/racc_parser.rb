#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'

# racc_parser.rb : generated by racc

module Cadenza
  class RaccParser < Racc::Parser

module_eval(<<'...end cadenza.y/module_eval...', 'cadenza.y', 223)

...end cadenza.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    39,    95,     3,     3,    45,     4,   120,    22,    39,    81,
    24,    25,    26,    27,    80,     3,    39,   123,     9,     9,
   140,    39,    71,    72,    35,    32,    36,   117,   114,    87,
    37,     9,    35,    38,    36,    39,    40,     3,    37,     4,
    35,    38,    36,   154,    40,    35,    37,    36,    91,    38,
    39,    37,    40,     9,    38,    93,    97,    40,    39,    35,
   135,    36,    97,    71,    72,    37,    39,    95,    38,   113,
    96,    40,   141,     3,    35,    41,    36,    82,    83,    39,
    37,   132,    35,    38,    36,    82,    40,    87,    37,     9,
    35,    38,    36,    22,    40,     3,    37,     4,     3,    38,
   151,   153,    40,    35,     3,    36,   128,    83,    93,    37,
   100,     9,    38,    22,     9,    40,    24,    25,    26,    27,
     9,    22,    71,    72,    24,    25,    26,    27,     3,    22,
     4,    32,    24,    25,    26,    27,    91,    22,    79,    32,
    24,    25,    26,    27,     9,    22,   115,    32,    24,    25,
    26,    27,     3,    22,   152,    32,    24,    25,    26,    27,
     3,    22,     4,    32,    24,    25,    26,    27,     9,    22,
    77,    32,    24,    25,    26,    27,     9,    76,    22,    32,
    58,    24,    25,    26,    27,   127,     3,    32,     4,     3,
     3,    41,    45,     3,   116,   136,    32,     3,     3,   133,
   128,     3,     9,   123,   119,     9,     9,   141,     3,     9,
   128,    62,    63,     9,     9,   122,     3,     9,   123,     3,
     3,     4,     4,    22,     9,    97,    24,    25,    26,    27,
    71,    72,     9,    73,    22,     9,     9,    24,    25,    26,
    27,    22,    71,    72,    24,    25,    26,    27,    22,    62,
    63,    24,    25,    26,    27,    22,    62,    63,    24,    25,
    26,    27,    22,    62,    63,    24,    25,    26,    27,    22,
    62,    63,    24,    25,    26,    27,    22,    60,    61,    24,
    25,    26,    27,    22,    71,    72,    24,    25,    26,    27,
    22,    62,    63,    24,    25,    26,    27,    22,    62,    63,
    24,    25,    26,    27,    64,    65,    66,    67,    68,    69,
    64,    65,    66,    67,    68,    69,    60,    61,    60,    61,
   149,   121,    55,    95,    52,    49,    18,   155,   156 ]

racc_action_check = [
   128,    78,    47,     0,    47,     0,    81,    95,   152,    40,
    95,    95,    95,    95,    40,   125,   133,   125,    47,     0,
    97,   136,    75,    75,   128,    95,   128,    78,    75,   128,
   128,   125,   152,   128,   152,     4,   128,   143,   152,   143,
   133,   152,   133,   152,   152,   136,   133,   136,   133,   133,
    41,   136,   133,   143,   136,   136,    96,   136,    45,     4,
    93,     4,    58,    74,    74,     4,   151,    57,     4,    74,
    57,     4,    99,    43,    41,    43,    41,    41,    41,   123,
    41,    91,    45,    41,    45,    45,    41,    45,    45,    43,
   151,    45,   151,   115,    45,    44,   151,    44,   144,   151,
   144,   151,   151,   123,   130,   123,   130,   123,    52,   123,
    59,    44,   123,    39,   144,   123,    39,    39,    39,    39,
   130,    71,    59,    59,    71,    71,    71,    71,    48,   140,
    48,    39,   140,   140,   140,   140,    49,     3,    39,    71,
     3,     3,     3,     3,    48,    27,    76,   140,    27,    27,
    27,    27,   150,    72,   150,     3,    72,    72,    72,    72,
    51,    35,    51,    27,    35,    35,    35,    35,   150,    36,
    38,    72,    36,    36,    36,    36,    51,    37,    22,    35,
    22,    22,    22,    22,    22,    87,   118,    36,   118,     5,
     6,     5,     6,    94,    77,    94,    22,    92,    90,    92,
    90,    86,   118,    86,    80,     5,     6,   139,    89,    94,
    89,   110,   110,    92,    90,    83,    85,    86,    85,     2,
    54,     2,    54,    61,    89,   141,    61,    61,    61,    61,
    34,    34,    85,    34,    67,     2,    54,    67,    67,    67,
    67,    68,   138,   138,    68,    68,    68,    68,    69,    30,
    30,    69,    69,    69,    69,    65,   109,   109,    65,    65,
    65,    65,    64,   108,   108,    64,    64,    64,    64,    63,
   107,   107,    63,    63,    63,    63,    62,    29,    29,    62,
    62,    62,    62,    66,    56,    56,    66,    66,    66,    66,
    60,   106,   106,    60,    60,    60,    60,    32,   105,   105,
    32,    32,    32,    32,    31,    31,    31,    31,    31,    31,
    70,    70,    70,    70,    70,    70,   104,   104,   103,   103,
   142,    82,    18,   147,     8,     7,     1,   153,   154 ]

racc_action_pointer = [
   -21,   326,   195,   134,    32,   165,   166,   299,   298,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   322,   nil,
   nil,   nil,   175,   nil,   nil,   nil,   nil,   142,   nil,   266,
   236,   289,   294,   nil,   208,   158,   166,   174,   167,   110,
     6,    47,   nil,    49,    71,    55,   nil,   -22,   104,   101,
   nil,   136,    71,   nil,   196,   nil,   262,    65,    59,   100,
   287,   220,   273,   266,   259,   252,   280,   231,   238,   245,
   295,   118,   150,   nil,    41,     0,   112,   166,    -1,   nil,
   176,   -22,   293,   187,   nil,   192,   177,   157,   nil,   184,
   174,    53,   173,    32,   169,     4,    53,    16,   nil,    67,
   nil,   nil,   nil,   307,   305,   285,   278,   257,   250,   243,
   198,   nil,   nil,   nil,   nil,    90,   nil,   nil,   162,   nil,
   nil,   nil,   nil,    76,   nil,    -9,   nil,   nil,    -3,   nil,
    80,   nil,   nil,    13,   nil,   nil,    18,   nil,   220,   202,
   126,   222,   292,    13,    74,   nil,   nil,   321,   nil,   nil,
   128,    63,     5,   299,   300,   nil,   nil ]

racc_action_default = [
    -2,   -80,    -1,   -80,   -80,   -80,   -80,   -55,   -60,   -68,
   -69,   -70,   -71,   -72,   -73,   -74,   -76,   -78,   -80,   -75,
   -77,   -79,    -9,   -13,   -14,   -15,   -16,   -80,   -18,   -21,
   -24,   -31,   -80,   -33,   -80,   -80,   -80,   -80,   -80,   -80,
   -80,   -80,   -42,   -80,   -80,   -80,   -47,   -80,   -80,   -80,
   -54,   -80,   -80,   -59,   -80,   157,    -3,   -11,   -80,   -80,
   -80,   -80,   -80,   -80,   -80,   -80,   -80,   -80,   -80,   -80,
   -32,   -80,   -80,   -36,   -80,   -80,   -80,   -80,   -80,   -62,
   -80,   -80,   -80,   -80,   -43,   -80,   -80,   -80,   -48,   -80,
   -80,   -80,   -80,   -80,   -80,   -80,   -80,    -5,    -7,   -10,
   -17,   -19,   -20,   -22,   -23,   -25,   -26,   -27,   -28,   -29,
   -30,   -34,   -35,   -37,   -38,   -80,   -57,   -64,   -80,   -66,
   -67,   -39,   -40,   -80,   -45,   -80,   -44,   -41,   -80,   -50,
   -80,   -49,   -53,   -80,   -56,   -58,   -80,   -61,    -4,   -12,
   -80,   -80,   -80,   -80,   -80,   -46,   -51,    -6,    -8,   -52,
   -80,   -80,   -80,   -80,   -80,   -63,   -65 ]

racc_goto_table = [
    19,    20,    42,    46,    34,    44,    48,    57,   142,    53,
    21,    99,     2,    51,    50,   111,   112,    43,    47,   103,
   104,   101,   102,    70,    78,    54,   118,   143,    59,   105,
   106,   107,   108,   109,   110,   148,    74,    75,     1,   nil,
    84,    19,    20,    85,    88,    19,    20,    89,   nil,   139,
   nil,    21,   nil,   nil,   nil,    21,    86,   nil,   nil,   nil,
    90,   nil,   nil,    92,   nil,   nil,    94,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   124,   126,    19,    20,   129,   131,    19,    20,
    19,    20,    19,    20,    21,   137,   138,   125,    21,   134,
    21,   130,    21,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   145,    19,    20,   147,   nil,   146,    19,    20,
   144,   nil,   nil,    21,   nil,   nil,   nil,   nil,    21,   nil,
   nil,   nil,    19,    20,   nil,   nil,   nil,   nil,    19,    20,
   nil,   nil,    21,   nil,   nil,   150,   nil,   nil,    21 ]

racc_goto_check = [
    33,    32,    17,    18,     4,    16,    16,     3,     7,    26,
    27,     6,     2,    24,    22,    12,    12,     2,     2,     9,
     9,     8,     8,    11,     3,    28,    30,    31,     4,    10,
    10,    10,    10,    10,    10,     5,     4,     4,     1,   nil,
    17,    33,    32,    16,    18,    33,    32,    16,   nil,     6,
   nil,    27,   nil,   nil,   nil,    27,     2,   nil,   nil,   nil,
     2,   nil,   nil,     2,   nil,   nil,     2,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    17,    17,    33,    32,    18,    18,    33,    32,
    33,    32,    33,    32,    27,    26,     4,     2,    27,    22,
    27,     2,    27,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    17,    33,    32,     3,   nil,    18,    33,    32,
     2,   nil,   nil,    27,   nil,   nil,   nil,   nil,    27,   nil,
   nil,   nil,    33,    32,   nil,   nil,   nil,   nil,    33,    32,
   nil,   nil,    27,   nil,   nil,     2,   nil,   nil,    27 ]

racc_goto_pointer = [
   nil,    38,    12,   -15,     1,  -106,   -47,  -107,   -39,   -43,
   -35,    -9,   -56,   nil,   nil,   nil,     0,    -3,    -3,   nil,
   nil,   nil,     7,   nil,     6,   nil,     1,     8,    17,   nil,
   -53,   -90,    -1,    -2 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,    56,    98,   nil,    23,    28,    29,
    30,    31,    33,    10,     5,     6,   nil,   nil,   nil,    11,
    12,     7,   nil,    13,   nil,     8,   nil,    17,   nil,    14,
   nil,   nil,    16,    15 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 42, :_reduce_none,
  0, 42, :_reduce_2,
  1, 44, :_reduce_3,
  3, 44, :_reduce_4,
  1, 46, :_reduce_5,
  3, 46, :_reduce_6,
  1, 47, :_reduce_7,
  3, 47, :_reduce_8,
  1, 48, :_reduce_9,
  3, 48, :_reduce_10,
  2, 48, :_reduce_11,
  4, 48, :_reduce_12,
  1, 49, :_reduce_none,
  1, 49, :_reduce_14,
  1, 49, :_reduce_15,
  1, 49, :_reduce_16,
  3, 49, :_reduce_17,
  1, 50, :_reduce_none,
  3, 50, :_reduce_19,
  3, 50, :_reduce_20,
  1, 51, :_reduce_none,
  3, 51, :_reduce_22,
  3, 51, :_reduce_23,
  1, 52, :_reduce_none,
  3, 52, :_reduce_25,
  3, 52, :_reduce_26,
  3, 52, :_reduce_27,
  3, 52, :_reduce_28,
  3, 52, :_reduce_29,
  3, 52, :_reduce_30,
  1, 53, :_reduce_none,
  2, 53, :_reduce_32,
  1, 45, :_reduce_none,
  3, 45, :_reduce_34,
  3, 45, :_reduce_35,
  3, 54, :_reduce_36,
  4, 55, :_reduce_37,
  4, 56, :_reduce_38,
  3, 57, :_reduce_39,
  3, 58, :_reduce_none,
  3, 59, :_reduce_none,
  2, 60, :_reduce_42,
  3, 60, :_reduce_43,
  4, 60, :_reduce_44,
  4, 60, :_reduce_45,
  5, 60, :_reduce_46,
  2, 61, :_reduce_47,
  3, 61, :_reduce_48,
  4, 61, :_reduce_49,
  4, 61, :_reduce_50,
  5, 61, :_reduce_51,
  6, 62, :_reduce_52,
  3, 63, :_reduce_none,
  2, 64, :_reduce_54,
  0, 65, :_reduce_55,
  4, 64, :_reduce_56,
  4, 66, :_reduce_57,
  3, 67, :_reduce_none,
  2, 68, :_reduce_59,
  0, 69, :_reduce_60,
  4, 68, :_reduce_61,
  0, 71, :_reduce_62,
  8, 70, :_reduce_63,
  0, 72, :_reduce_64,
  9, 70, :_reduce_65,
  4, 73, :_reduce_66,
  4, 73, :_reduce_67,
  1, 74, :_reduce_68,
  1, 74, :_reduce_none,
  1, 74, :_reduce_none,
  1, 74, :_reduce_none,
  1, 74, :_reduce_none,
  1, 74, :_reduce_none,
  1, 43, :_reduce_74,
  2, 43, :_reduce_75,
  1, 43, :_reduce_76,
  2, 43, :_reduce_77,
  1, 43, :_reduce_78,
  2, 43, :_reduce_79 ]

racc_reduce_n = 80

racc_shift_n = 157

racc_token_table = {
  false => 0,
  :error => 1,
  "," => 2,
  :IDENTIFIER => 3,
  ":" => 4,
  "|" => 5,
  :INTEGER => 6,
  :REAL => 7,
  :STRING => 8,
  "(" => 9,
  ")" => 10,
  "*" => 11,
  "/" => 12,
  "+" => 13,
  "-" => 14,
  :OP_EQ => 15,
  :OP_NEQ => 16,
  :OP_LEQ => 17,
  :OP_GEQ => 18,
  ">" => 19,
  "<" => 20,
  :NOT => 21,
  :AND => 22,
  :OR => 23,
  :VAR_OPEN => 24,
  :VAR_CLOSE => 25,
  :STMT_OPEN => 26,
  :IF => 27,
  :STMT_CLOSE => 28,
  :UNLESS => 29,
  :ELSE => 30,
  :ENDIF => 31,
  :ENDUNLESS => 32,
  :FOR => 33,
  :IN => 34,
  :ENDFOR => 35,
  :BLOCK => 36,
  :ENDBLOCK => 37,
  :END => 38,
  :EXTENDS => 39,
  :TEXT_BLOCK => 40 }

racc_nt_base = 41

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\",\"",
  "IDENTIFIER",
  "\":\"",
  "\"|\"",
  "INTEGER",
  "REAL",
  "STRING",
  "\"(\"",
  "\")\"",
  "\"*\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "OP_EQ",
  "OP_NEQ",
  "OP_LEQ",
  "OP_GEQ",
  "\">\"",
  "\"<\"",
  "NOT",
  "AND",
  "OR",
  "VAR_OPEN",
  "VAR_CLOSE",
  "STMT_OPEN",
  "IF",
  "STMT_CLOSE",
  "UNLESS",
  "ELSE",
  "ENDIF",
  "ENDUNLESS",
  "FOR",
  "IN",
  "ENDFOR",
  "BLOCK",
  "ENDBLOCK",
  "END",
  "EXTENDS",
  "TEXT_BLOCK",
  "$start",
  "target",
  "document",
  "parameter_list",
  "logical_expression",
  "filter",
  "filter_list",
  "variable_expression",
  "primary_expression",
  "multiplicative_expression",
  "additive_expression",
  "boolean_expression",
  "inverse_expression",
  "inject_statement",
  "if_tag",
  "unless_tag",
  "else_tag",
  "end_if_tag",
  "end_unless_tag",
  "if_block",
  "unless_block",
  "for_tag",
  "end_for_tag",
  "for_block",
  "@1",
  "block_tag",
  "end_block_tag",
  "block_block",
  "@2",
  "generic_block",
  "@3",
  "@4",
  "extends_statement",
  "document_component" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'cadenza.y', 8)
  def _reduce_2(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 12)
  def _reduce_3(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 13)
  def _reduce_4(val, _values, result)
     result = val[0].push(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 17)
  def _reduce_5(val, _values, result)
     result = FilterNode.new(val[0].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 18)
  def _reduce_6(val, _values, result)
     result = FilterNode.new(val[0].value, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 22)
  def _reduce_7(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 23)
  def _reduce_8(val, _values, result)
     result = val[0].push(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 27)
  def _reduce_9(val, _values, result)
     result = VariableNode.new(val[0].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 28)
  def _reduce_10(val, _values, result)
     result = VariableNode.new(val[0].value, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 29)
  def _reduce_11(val, _values, result)
     result = VariableNode.new(val[0].value, [], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 30)
  def _reduce_12(val, _values, result)
     result = VariableNode.new(val[0].value, val[3], val[1]) 
    result
  end
.,.,

# reduce 13 omitted

module_eval(<<'.,.,', 'cadenza.y', 35)
  def _reduce_14(val, _values, result)
     result = ConstantNode.new(val[0].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 36)
  def _reduce_15(val, _values, result)
     result = ConstantNode.new(val[0].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 37)
  def _reduce_16(val, _values, result)
     result = ConstantNode.new(val[0].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 38)
  def _reduce_17(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 18 omitted

module_eval(<<'.,.,', 'cadenza.y', 43)
  def _reduce_19(val, _values, result)
     result = OperationNode.new(val[0], "*", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 44)
  def _reduce_20(val, _values, result)
     result = OperationNode.new(val[0], "/", val[2]) 
    result
  end
.,.,

# reduce 21 omitted

module_eval(<<'.,.,', 'cadenza.y', 49)
  def _reduce_22(val, _values, result)
     result = OperationNode.new(val[0], "+", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 50)
  def _reduce_23(val, _values, result)
     result = OperationNode.new(val[0], "-", val[2]) 
    result
  end
.,.,

# reduce 24 omitted

module_eval(<<'.,.,', 'cadenza.y', 55)
  def _reduce_25(val, _values, result)
     result = OperationNode.new(val[0], "==", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 56)
  def _reduce_26(val, _values, result)
     result = OperationNode.new(val[0], "!=", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 57)
  def _reduce_27(val, _values, result)
     result = OperationNode.new(val[0], "<=", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 58)
  def _reduce_28(val, _values, result)
     result = OperationNode.new(val[0], ">=", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 59)
  def _reduce_29(val, _values, result)
     result = OperationNode.new(val[0], ">", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 60)
  def _reduce_30(val, _values, result)
     result = OperationNode.new(val[0], "<", val[2]) 
    result
  end
.,.,

# reduce 31 omitted

module_eval(<<'.,.,', 'cadenza.y', 65)
  def _reduce_32(val, _values, result)
     result = BooleanInverseNode.new(val[1]) 
    result
  end
.,.,

# reduce 33 omitted

module_eval(<<'.,.,', 'cadenza.y', 70)
  def _reduce_34(val, _values, result)
     result = OperationNode.new(val[0], "and", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 71)
  def _reduce_35(val, _values, result)
     result = OperationNode.new(val[0], "or", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 75)
  def _reduce_36(val, _values, result)
     result = InjectNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 81)
  def _reduce_37(val, _values, result)
            @stack.push DocumentNode.new
        result = val[2]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 89)
  def _reduce_38(val, _values, result)
            @stack.push DocumentNode.new
        result = BooleanInverseNode.new(val[2])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 95)
  def _reduce_39(val, _values, result)
     @stack.push DocumentNode.new 
    result
  end
.,.,

# reduce 40 omitted

# reduce 41 omitted

module_eval(<<'.,.,', 'cadenza.y', 107)
  def _reduce_42(val, _values, result)
     @stack.pop; result = IfNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 108)
  def _reduce_43(val, _values, result)
     result = IfNode.new(val[0], @stack.pop.children) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 111)
  def _reduce_44(val, _values, result)
            false_children, true_children = @stack.pop.children, @stack.pop.children
        result = IfNode.new(val[0], true_children, false_children)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 116)
  def _reduce_45(val, _values, result)
            false_children, true_children = @stack.pop.children, @stack.pop.children
        result = IfNode.new(val[0], true_children, false_children)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 121)
  def _reduce_46(val, _values, result)
            false_children, true_children = @stack.pop.children, @stack.pop.children
        result = IfNode.new(val[0], true_children, false_children)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 127)
  def _reduce_47(val, _values, result)
     @stack.pop; result = IfNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 128)
  def _reduce_48(val, _values, result)
     result = IfNode.new(val[0], @stack.pop.children) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 131)
  def _reduce_49(val, _values, result)
            false_children, true_children = @stack.pop.children, @stack.pop.children
        result = IfNode.new(val[0], true_children, false_children)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 136)
  def _reduce_50(val, _values, result)
            false_children, true_children = @stack.pop.children, @stack.pop.children
        result = IfNode.new(val[0], true_children, false_children)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 141)
  def _reduce_51(val, _values, result)
            false_children, true_children = @stack.pop.children, @stack.pop.children
        result = IfNode.new(val[0], true_children, false_children)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 147)
  def _reduce_52(val, _values, result)
     result = [val[2].value, val[4]] 
    result
  end
.,.,

# reduce 53 omitted

module_eval(<<'.,.,', 'cadenza.y', 158)
  def _reduce_54(val, _values, result)
            iterator = VariableNode.new(val[0][0])
        iterable = val[0][1]
        
        result = ForNode.new(iterator, iterable, [])      
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 163)
  def _reduce_55(val, _values, result)
     @stack.push DocumentNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 165)
  def _reduce_56(val, _values, result)
            iterator = VariableNode.new(val[0][0])
        iterable = val[0][1]
        
        result = ForNode.new(iterator, iterable, @stack.pop.children)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 173)
  def _reduce_57(val, _values, result)
     result = val[2].value 
    result
  end
.,.,

# reduce 58 omitted

module_eval(<<'.,.,', 'cadenza.y', 182)
  def _reduce_59(val, _values, result)
     result = BlockNode.new(val[0], []) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 183)
  def _reduce_60(val, _values, result)
     @stack.push DocumentNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 183)
  def _reduce_61(val, _values, result)
     result = BlockNode.new(val[0], @stack.pop.children) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 187)
  def _reduce_62(val, _values, result)
     @stack.push DocumentNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 189)
  def _reduce_63(val, _values, result)
     result = GenericBlockNode.new(val[1].value, @stack.pop.children) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 190)
  def _reduce_64(val, _values, result)
     @stack.push DocumentNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 192)
  def _reduce_65(val, _values, result)
     result = GenericBlockNode.new(val[1].value, @stack.pop.children, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 196)
  def _reduce_66(val, _values, result)
     result = val[2].value 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 197)
  def _reduce_67(val, _values, result)
     result = VariableNode.new(val[2].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 201)
  def _reduce_68(val, _values, result)
     result = TextNode.new(val[0].value) 
    result
  end
.,.,

# reduce 69 omitted

# reduce 70 omitted

# reduce 71 omitted

# reduce 72 omitted

# reduce 73 omitted

module_eval(<<'.,.,', 'cadenza.y', 210)
  def _reduce_74(val, _values, result)
     push_child val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 211)
  def _reduce_75(val, _values, result)
     push_child val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 212)
  def _reduce_76(val, _values, result)
     @stack.first.extends = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 213)
  def _reduce_77(val, _values, result)
     @stack.first.extends = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 214)
  def _reduce_78(val, _values, result)
     push_block(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 215)
  def _reduce_79(val, _values, result)
     push_block(val[1]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class RaccParser
  end   # module Cadenza
